[tox]
envlist =
    tests
    linting
    coverage
    docs
    type_check
skip_missing_interpreters = True
isolated_build = True

[testenv]
commands = python -m pip install --upgrade pip


[testenv:tests]
deps =
    -r requirements.txt
    -r dev_requirements/requirements-tests.txt
commands = python -m pytest --basetemp={envtmpdir} {posargs}


[testenv:linting]
deps =
    -r requirements.txt
    -r dev_requirements/requirements-linting.txt
    {[testenv:docs]deps}
    {[testenv:generate_json_schemas]deps}
commands =
    pylint src/bo4e
    pylint docs/uml.py
    pylint json_schemas/generate_json_schemas.py

[testenv:type_check]
usedevelop = True
# the type_check environment checks the type hints using mypy
deps =
    -rrequirements.txt
    {[testenv:docs]deps}
    {[testenv:generate_json_schemas]deps}
    -r dev_requirements/requirements-type_check.txt
commands =
    mypy --show-error-codes src/bo4e
    mypy --show-error-codes tests
    mypy --show-error-codes docs/uml.py
    mypy --show-error-codes json_schemas/generate_json_schemas.py
    # add single files (ending with .py) or packages here

[testenv:coverage]
usedevelop = True
deps =
    {[testenv:tests]deps}
    -r dev_requirements/requirements-coverage.txt
commands =
    coverage run -m pytest --basetemp={envtmpdir} {posargs}
    coverage html --omit .tox/*,tests/*
    coverage report --fail-under 99 --omit .tox/*,tests/*


[testenv:dev]
usedevelop = True
deps =
    {[testenv:tests]deps}
    {[testenv:linting]deps}
    {[testenv:type_check]deps}
    {[testenv:coverage]deps}
    {[testenv:docs]deps}
    -r dev_requirements/requirements-formatting.txt
    # Replace by any tag/version: https://github.com/psf/black/tags
    # and change the pre-commit-config.yaml accordingly
    pip-tools
    pre-commit
commands =
    python -m pip install --upgrade pip
    pip-compile requirements.in
    pip install -r requirements.txt
    pre-commit install


[testenv:docs]
deps =
    -r requirements.txt
    -r docs/requirements.txt
# any dependency added here should also be added in docs/requirements.in and docs/requirements.txt respectively
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html
    python -m doctest README.rst


[testenv:bo4e-from-pip]
basepython = python3.10
skip_install = true
deps = -r dev_requirements/requirements-tests.txt
commands =
    pip install bo4e
    python -m pytest


[testenv:test_packaging]
skip_install = true
deps =
    -r dev_requirements/requirements-packaging.txt
commands =
    python -m build
    twine check dist/*

[testenv:generate_json_schemas]
# an environment to generate the json schemas from the bo4e classes
usedevelop = True
deps =
    -r requirements.txt
    -r dev_requirements/requirements-json_schemas.txt
commands =
    python json_schemas/generate_json_schemas.py --mode generate

[testenv:validate_json_schemas]
# an environment to validate that the json schemas are consistent with the python code
usedevelop = True
deps =
   {[testenv:generate_json_schemas]deps}
commands =
    python json_schemas/generate_json_schemas.py --mode validate
