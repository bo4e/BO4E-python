[tox]
envlist =
    tests
    linting
    coverage
    docs
skip_missing_interpreters = True
isolated_build = True

[testenv]
commands = python -m pip install --upgrade pip

[testenv:dev]
description = development environment
usedevelop = True
deps =
    black
    pip-tools
    flake8
    flakehell
    pytest
    pytest-datafiles
commands =
    python -m pip install --upgrade pip
    pip-compile requirements/base.in
    pip-compile requirements/dev.in
    pip-compile requirements/docs.in
    pip-compile requirements/tests.in
    pip install -q -e . -r requirements/dev.txt

[testenv:tests]
deps =
    -rrequirements/base.txt
    pytest
    pytest-datafiles
commands = python -m pytest --basetemp={envtmpdir} {posargs}

[testenv:linting]
skip_install = true
deps =
    -rrequirements/base.txt
    pylint
commands = pylint src/bo4e

[testenv:coverage]
deps =
    {[testenv:tests]deps}
    coverage
commands =
    coverage run -m pytest --basetemp={envtmpdir} {posargs}
    coverage report --fail-under 80 --omit .tox/*,unittests/*


[testenv:docs]
deps = -r requirements/docs.txt
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html
    python -m doctest README.rst


[testenv:bo4e-from-pip]
basepython = python3.8
skip_install = true
deps = -r requirements/tests.txt
commands =
    pip install bo4e
    python -m pytest


[testenv:test_packaging]
basepython = python3.8
skip_install = true
deps =
    setuptools
    setuptools-scm
    wheel
    twine
commands =
    python setup.py sdist bdist_wheel
    twine check dist/*


; ------------------------------------------

; the following lines are not used now.
; these are just some ideas for the future.

; [testenv:black]
; description = autoformat with black


; [testenv:lint]
; basepython = python3.8
; skip_install = true
; deps =
;     pre-commit
; passenv = HOMEPATH  # needed on Windows
; commands =
;     pre-commit run --all-files


; [testenv:changelog]
; basepython = python3.8
; deps = towncrier
; skip_install = true
; commands = towncrier --draft


; [testenv:coverage-report]
; deps = coverage
; skip_install = true
; commands =
;     coverage combine
;     coverage report


